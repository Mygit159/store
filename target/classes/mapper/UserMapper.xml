<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--用于指定当前映射文件与那个接口进行映射-->
<mapper namespace="com.cy.store.mapper.UserMapper">

    <!--
       id:给这个映射负责分配一个唯一的id，对应的就是resultMap=“id的属性值”属性的取值
       type:取值是一个类，表示的是数据库中的查询结果与java中的哪个实体类进行【结果集映射】
    -->
    <resultMap id="userEntityMap" type="com.cy.store.entity.User">
         <!--主键属性必须写-->
        <id column="uid" property="uid"></id>
        <!--将表中字眼和类属性不一致的字段进行匹配,名称一致的字段可以省略不写-->
        <result column="is_delete" property="isDelete"></result>
        <result column="created_user" property="createdUser"></result>
        <result column="created_time" property="createdTime"></result>
        <result column="modified_user" property="modifiedUser"></result>
        <result column="modified_time" property="modifiedTime"></result>
    </resultMap>

    <!--
    useGenerateKeys属性：表示开启某个字段的值递增【一般为主键】
    keyProperty属性：将表中那个字段的值作为主键进行递增
    插入除uid以外的所有数据
    -->
    <insert id="insertUser" useGeneratedKeys="true" keyProperty="uid">
        insert into t_user(username,password,salt,phone,email,gender,avatar,is_delete,
        created_user,created_time,modified_user,modified_time)
        values(
        #{username}, #{password}, #{salt}, #{phone}, #{email}, #{gender}, #{avatar},#{isDelete},
        #{createdUser},#{createdTime},#{modifiedUser},#{modifiedTime}
        )
    </insert>
    
    <select id="findUserByUsername" resultMap="userEntityMap">
        select * from t_user where username=#{username}
    </select>

    <update id="updatePasswordByUid" >
        update t_user set password=#{password},modified_user=#{modifiedUser},modified_time=#{modifiedTime}
        where uid=#{uid}
    </update>

    <select id="findByUid" resultMap="userEntityMap">
        select * from t_user where uid=#{uid}
    </select>
    
    <update id="updateInfoByUid">
        update t_user
        set
        <if test="phone!=null">phone=#{phone},</if>
        <if test="email!=null">email=#{email},</if>
        <if test="gender!=null">gender=#{gender},</if>
        modified_user=#{modifiedUser},
        modified_time=#{modifiedTime}
        where uid=#{uid}
    </update>

    <update id="updateAvatarByUid">
        update t_user
        set avatar=#{avatar}, modified_user=#{modifiedUser}, modified_time=#{modifiedTime}
        where uid=#{uid}
    </update>
</mapper>